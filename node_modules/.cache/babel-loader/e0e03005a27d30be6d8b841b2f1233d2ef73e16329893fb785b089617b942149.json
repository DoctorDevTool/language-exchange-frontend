{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createReq, deleteReq, fetchIncoming, fetchOutgoing } from '../services/requestService';\nconst requestsSlice = createSlice({\n  name: 'requests',\n  initialState: {\n    incoming: [],\n    outgoing: [],\n    matches: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearReqs: state => {\n      state.incoming = [];\n      state.outgoing = [];\n      state.matches = [];\n      state.status = 'idle';\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createReq.pending, state => {\n      state.status = 'pending';\n      state.error = null;\n    }).addCase(createReq.fulfilled, (state, action) => {\n      state.outgoing.push(action.payload);\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(fetchIncoming.fulfilled, (state, action) => {\n      state.incoming = action.payload;\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(fetchOutgoing.fulfilled, (state, action) => {\n      state.outgoing;\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(deleteReq.fulfilled, (state, action) => {\n      state.outgoing = state.outgoing.filter(req => req.id !== Number(action.payload));\n      state.status = 'succeeded';\n      state.error = null;\n    });\n  }\n});\nexport const {\n  clearReqs\n} = requestsSlice.actions;\nexport default requestsSlice.reducer;","map":{"version":3,"names":["createSlice","createReq","deleteReq","fetchIncoming","fetchOutgoing","requestsSlice","name","initialState","incoming","outgoing","matches","status","error","reducers","clearReqs","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","filter","req","id","Number","actions","reducer"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/features/requestsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport {\n    createReq,\n    deleteReq,\n    fetchIncoming,\n    fetchOutgoing,\n} from '../services/requestService';\n\nconst requestsSlice = createSlice({\n    name: 'requests',\n    initialState: {\n        incoming: [],\n        outgoing: [],\n        matches: [],\n        status: 'idle',\n        error: null,\n    },\n    reducers: {\n        clearReqs: (state) => {\n            state.incoming = [];\n            state.outgoing = [];\n            state.matches = [];\n            state.status = 'idle';\n            state.error = null;\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(createReq.pending, (state) => {\n                state.status = 'pending';\n                state.error = null;\n            })\n            .addCase(createReq.fulfilled, (state, action) => {\n                state.outgoing.push(action.payload);\n                state.status = 'succeeded';\n                state.error = null;\n            })\n            .addCase(fetchIncoming.fulfilled, (state, action) => {\n                state.incoming = action.payload;\n                state.status = 'succeeded';\n                state.error = null;\n            })\n            .addCase(fetchOutgoing.fulfilled, (state, action) => {\n                state.outgoing\n                state.status = 'succeeded';\n                state.error = null;\n            })\n            .addCase(deleteReq.fulfilled, (state, action) => {\n                state.outgoing = state.outgoing.filter(\n                    (req) => req.id !== Number(action.payload)\n                );\n                state.status = 'succeeded';\n                state.error = null;\n            });\n    },\n});\n\nexport const { clearReqs } = requestsSlice.actions;\nexport default requestsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SACIC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,aAAa,QACV,4BAA4B;AAEnC,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACP,QAAQ,GAAG,EAAE;MACnBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACL,OAAO,GAAG,EAAE;MAClBK,KAAK,CAACJ,MAAM,GAAG,MAAM;MACrBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB;EACJ,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACjB,SAAS,CAACkB,OAAO,EAAGJ,KAAK,IAAK;MACnCA,KAAK,CAACJ,MAAM,GAAG,SAAS;MACxBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACjB,SAAS,CAACmB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACN,QAAQ,CAACa,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACnCR,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACf,aAAa,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACP,QAAQ,GAAGa,MAAM,CAACE,OAAO;MAC/BR,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACd,aAAa,CAACgB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACN,QAAQ;MACdM,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAAChB,SAAS,CAACkB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACe,MAAM,CACjCC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKC,MAAM,CAACN,MAAM,CAACE,OAAO,CAC7C,CAAC;MACDR,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAU,CAAC,GAAGT,aAAa,CAACuB,OAAO;AAClD,eAAevB,aAAa,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}