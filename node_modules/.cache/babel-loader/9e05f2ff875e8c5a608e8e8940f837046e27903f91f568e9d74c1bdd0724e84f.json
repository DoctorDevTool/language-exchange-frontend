{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const createReq = createAsyncThunk('requests', async (userId, thunkAPI) => {\n  try {\n    const res = await axios.post(`${API_URL}/requests`, {\n      to_user_id: userId\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || err.message);\n  }\n});\nexport const deleteReq = createAsyncThunk('requests/del', async ({\n  id\n}, thunkAPI) => {\n  try {\n    const res = await axios.delete(`${API_URL}/requests/${reqId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(console.log('here'), err.response.data.message || err.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","API_URL","process","env","REACT_APP_API_URL","createReq","userId","thunkAPI","res","post","to_user_id","headers","Authorization","localStorage","getItem","data","err","rejectWithValue","response","message","deleteReq","id","delete","reqId","console","log"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/services/requestService.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const createReq = createAsyncThunk(\n    'requests',\n    async (userId, thunkAPI) => {\n        try {\n            const res = await axios.post(\n                `${API_URL}/requests`,\n                {\n                    to_user_id: userId,\n                },\n                {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\n                            'token'\n                        )}`,\n                    },\n                }\n            );\n\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(\n                err.response.data.message || err.message\n            );\n        }\n    }\n);\n\nexport const deleteReq = createAsyncThunk(\n    'requests/del',\n    async ({id}, thunkAPI) => {\n\n        try {\n            const res = await axios.delete(\n                `${API_URL}/requests/${reqId}`,\n               \n                {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem(\n                            'token'\n                        )}`,\n                    },\n                }\n            );\n\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(\n                console.log('here'),\n                err.response.data.message || err.message\n            );\n        }\n    }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,SAAS,GAAGN,gBAAgB,CACrC,UAAU,EACV,OAAOO,MAAM,EAAEC,QAAQ,KAAK;EACxB,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CACxB,GAAGR,OAAO,WAAW,EACrB;MACIS,UAAU,EAAEJ;IAChB,CAAC,EACD;MACIK,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CACzC,OACJ,CAAC;MACL;IACJ,CACJ,CAAC;IAED,OAAON,GAAG,CAACO,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOT,QAAQ,CAACU,eAAe,CAC3BD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO,IAAIH,GAAG,CAACG,OACrC,CAAC;EACL;AACJ,CACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGrB,gBAAgB,CACrC,cAAc,EACd,OAAO;EAACsB;AAAE,CAAC,EAAEd,QAAQ,KAAK;EAEtB,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACsB,MAAM,CAC1B,GAAGrB,OAAO,aAAasB,KAAK,EAAE,EAE9B;MACIZ,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CACzC,OACJ,CAAC;MACL;IACJ,CACJ,CAAC;IAED,OAAON,GAAG,CAACO,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOT,QAAQ,CAACU,eAAe,CAC3BO,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,EACnBT,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO,IAAIH,GAAG,CAACG,OACrC,CAAC;EACL;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}