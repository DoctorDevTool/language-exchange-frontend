{"ast":null,"code":"var _jsxFileName = \"/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../services/authService';\nimport { TextField, Button, Container, Typography, Box, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    status,\n    error\n  } = useSelector(state => state.auth);\n  const [form, setForm] = useState({\n    full_name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [localError, setLocalError] = useState(null);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setLocalError(null); // Clear error when user types\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (form.password !== form.confirmPassword) {\n      setLocalError('Passwords do not match.');\n      return;\n    }\n    const {\n      confirmPassword,\n      ...userData\n    } = form;\n    dispatch(register(userData));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), localError && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: localError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 32\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Username\",\n          name: \"full_name\",\n          margin: \"normal\",\n          value: form.full_name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          name: \"email\",\n          margin: \"normal\",\n          value: form.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          margin: \"normal\",\n          value: form.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          type: \"password\",\n          margin: \"normal\",\n          value: form.confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          disabled: status === 'loading',\n          children: status === 'loading' ? 'Registering...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"qk8MvP8jLT8fQ+bEAFv0NZuMSdI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","register","TextField","Button","Container","Typography","Box","Alert","jsxDEV","_jsxDEV","RegisterPage","_s","dispatch","status","error","state","auth","form","setForm","full_name","email","password","confirmPassword","localError","setLocalError","handleChange","e","target","name","value","handleSubmit","preventDefault","userData","maxWidth","children","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","onSubmit","fullWidth","label","margin","onChange","required","type","color","disabled","_c","$RefreshReg$"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../services/authService';\nimport {\n    TextField,\n    Button,\n    Container,\n    Typography,\n    Box,\n    Alert,\n} from '@mui/material';\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const { status, error } = useSelector((state) => state.auth);\n\n    const [form, setForm] = useState({\n        full_name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    });\n\n    const [localError, setLocalError] = useState(null);\n\n    const handleChange = (e) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n        setLocalError(null); // Clear error when user types\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (form.password !== form.confirmPassword) {\n            setLocalError('Passwords do not match.');\n            return;\n        }\n\n        const { confirmPassword, ...userData } = form;\n        dispatch(register(userData));\n    };\n\n    return (\n        <Container maxWidth='sm'>\n            <Box mt={5}>\n                <Typography variant='h4' gutterBottom>\n                    Register\n                </Typography>\n                {localError && <Alert severity='error'>{localError}</Alert>}\n                {error && <Alert severity='error'>{error}</Alert>}\n                <form onSubmit={handleSubmit}>\n                    <TextField\n                        fullWidth\n                        label='Username'\n                        name='full_name'\n                        margin='normal'\n                        value={form.full_name}\n                        onChange={handleChange}\n                        required\n                    />\n                    <TextField\n                        fullWidth\n                        label='Email'\n                        name='email'\n                        margin='normal'\n                        value={form.email}\n                        onChange={handleChange}\n                        required\n                    />\n                    <TextField\n                        fullWidth\n                        label='Password'\n                        name='password'\n                        type='password'\n                        margin='normal'\n                        value={form.password}\n                        onChange={handleChange}\n                        required\n                    />\n                    <TextField\n                        fullWidth\n                        label='Confirm Password'\n                        name='confirmPassword'\n                        type='password'\n                        margin='normal'\n                        value={form.confirmPassword}\n                        onChange={handleChange}\n                        required\n                    />\n\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        fullWidth\n                        disabled={status === 'loading'}>\n                        {status === 'loading' ? 'Registering...' : 'Register'}\n                    </Button>\n                </form>\n            </Box>\n        </Container>\n    );\n};\n\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}