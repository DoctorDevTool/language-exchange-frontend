{"ast":null,"code":"var _jsxFileName = \"/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/pages/LanguageControlPage.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllLanguages } from '../services/languageControlService';\nimport { useEffect } from 'react';\nimport { Container, Box, Typography, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageControlPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    languages,\n    status,\n    error\n  } = useSelector(state => state.langControl);\n  useEffect(() => {\n    dispatch(getAllLanguages());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 42\n      }, this), status === 'failed' && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 41\n      }, this), status === 'succeeded' && /*#__PURE__*/_jsxDEV(Box, {\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(Chip, {\n          label: language.name\n        }, language.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageControlPage, \"T065gyfVwzeus+rw64+mqVkL5u0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LanguageControlPage;\nexport default LanguageControlPage;\nvar _c;\n$RefreshReg$(_c, \"LanguageControlPage\");","map":{"version":3,"names":["useSelector","useDispatch","getAllLanguages","useEffect","Container","Box","Typography","Chip","jsxDEV","_jsxDEV","LanguageControlPage","_s","dispatch","languages","status","error","state","langControl","maxWidth","children","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","language","label","name","id","_c","$RefreshReg$"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/pages/LanguageControlPage.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { getAllLanguages } from '../services/languageControlService';\nimport { useEffect } from 'react';\nimport { Container, Box, Typography, Chip } from '@mui/material';\n\nconst LanguageControlPage = () => {\n    const dispatch = useDispatch();\n    const { languages, status, error } = useSelector((state) => state.langControl);\n\n    useEffect(() => {\n        dispatch(getAllLanguages());\n    }, [dispatch]);\n\n    return (\n        <Container maxWidth='sm'>\n            <Box mt={5}>\n                <Typography variant='h4' gutterBottom>\n                    Languages\n                </Typography>\n                {status === 'loading' && <Typography variant='h6' gutterBottom>Loading...</Typography>}\n                {status === 'failed' && <Typography variant='h6' gutterBottom>Error: {error}</Typography>}\n                {status === 'succeeded' && (\n                    <Box>\n                        {languages.map((language) => (\n                            <Chip key={language.id} label={language.name} />\n                        ))}\n                    </Box>\n                )}\n            </Box>\n            \n        </Container>\n    );\n}\n    \nexport default LanguageControlPage;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,EAAEC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY,SAAS;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAE9Ed,SAAS,CAAC,MAAM;IACZS,QAAQ,CAACV,eAAe,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA,CAACL,SAAS;IAACc,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACpBV,OAAA,CAACJ,GAAG;MAACe,EAAE,EAAE,CAAE;MAAAD,QAAA,gBACPV,OAAA,CAACH,UAAU;QAACe,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAH,QAAA,EAAC;MAEtC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EACZZ,MAAM,KAAK,SAAS,iBAAIL,OAAA,CAACH,UAAU;QAACe,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAH,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EACrFZ,MAAM,KAAK,QAAQ,iBAAIL,OAAA,CAACH,UAAU;QAACe,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAH,QAAA,GAAC,SAAO,EAACJ,KAAK;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,EACxFZ,MAAM,KAAK,WAAW,iBACnBL,OAAA,CAACJ,GAAG;QAAAc,QAAA,EACCN,SAAS,CAACc,GAAG,CAAEC,QAAQ,iBACpBnB,OAAA,CAACF,IAAI;UAAmBsB,KAAK,EAAED,QAAQ,CAACE;QAAK,GAAlCF,QAAQ,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyB,CAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEpB,CAAC;AAAAf,EAAA,CA3BKD,mBAAmB;EAAA,QACJT,WAAW,EACSD,WAAW;AAAA;AAAAgC,EAAA,GAF9CtB,mBAAmB;AA6BzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}