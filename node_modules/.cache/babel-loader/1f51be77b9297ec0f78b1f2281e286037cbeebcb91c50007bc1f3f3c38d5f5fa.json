{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst requestsSlice = createSlice({\n  name: 'requests',\n  initialState: {\n    list: [],\n    status: '',\n    error: null\n  },\n  reducers: {\n    clearReqs: state => {\n      state.list = [];\n      state.status = ' ';\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    // builder\n    //     .addCase(fetchUsers.pending, (state) => {\n    //         state.status = 'loading';\n    //         state.error = null;\n    //     })\n  }\n});\nexport const {\n  clearUsers\n} = requestsSlice.actions;\nexport default requestsSlice.reducer;","map":{"version":3,"names":["createSlice","requestsSlice","name","initialState","list","status","error","reducers","clearReqs","state","extraReducers","builder","clearUsers","actions","reducer"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/features/requestsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst requestsSlice = createSlice({\n    name: 'requests',\n    initialState: {\n        list: [],\n        status: '',\n        error: null,\n    },\n    reducers: {\n        clearReqs: (state) => {\n            state.list = [];\n            state.status = ' ';\n            state.error = null;\n        },\n    },\n    extraReducers: (builder) => {\n        // builder\n        //     .addCase(fetchUsers.pending, (state) => {\n        //         state.status = 'loading';\n        //         state.error = null;\n        //     })\n            \n    },\n});\n\nexport const { clearUsers } = requestsSlice.actions;\nexport default requestsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACL,IAAI,GAAG,EAAE;MACfK,KAAK,CAACJ,MAAM,GAAG,GAAG;MAClBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB;EACJ,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IACxB;IACA;IACA;IACA;IACA;EAAA;AAGR,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAW,CAAC,GAAGX,aAAa,CAACY,OAAO;AACnD,eAAeZ,aAAa,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}