{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const login = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  try {\n    const res = await axios.post(`${API_URL}/auth/login`, credentials);\n    localStorage.setItem('token', res.data.token);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || 'Login failed');\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\n  try {\n    const res = await axios.post(`${API_URL}/auth/register`, userData);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || 'Registration failed');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","API_URL","process","env","REACT_APP_API_URL","login","credentials","thunkAPI","res","post","localStorage","setItem","data","token","err","rejectWithValue","response","message","register","userData"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/services/authService.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (credentials, thunkAPI) => {\n        try {\n            const res = await axios.post(`${API_URL}/auth/login`, credentials);\n            localStorage.setItem('token', res.data.token);\n\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(\n                err.response.data.message || 'Login failed'\n            );\n        }\n    }\n);\n\nexport const register = createAsyncThunk(\n    'auth/register',\n    async (userData, thunkAPI) => {\n        try {\n            const res = await axios.post(`${API_URL}/auth/register`, userData);\n\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(\n                err.response.data.message || 'Registration failed'\n            );\n        }\n    }\n);"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,KAAK,GAAGN,gBAAgB,CACjC,YAAY,EACZ,OAAOO,WAAW,EAAEC,QAAQ,KAAK;EAC7B,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,aAAa,EAAEK,WAAW,CAAC;IAClEI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;IAE7C,OAAOL,GAAG,CAACI,IAAI;EACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACV,OAAOP,QAAQ,CAACQ,eAAe,CAC3BD,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,OAAO,IAAI,cACjC,CAAC;EACL;AACJ,CACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGnB,gBAAgB,CACpC,eAAe,EACf,OAAOoB,QAAQ,EAAEZ,QAAQ,KAAK;EAC1B,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,gBAAgB,EAAEkB,QAAQ,CAAC;IAElE,OAAOX,GAAG,CAACI,IAAI;EACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACV,OAAOP,QAAQ,CAACQ,eAAe,CAC3BD,GAAG,CAACE,QAAQ,CAACJ,IAAI,CAACK,OAAO,IAAI,qBACjC,CAAC;EACL;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}