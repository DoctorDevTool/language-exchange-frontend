{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const getAllLanguages = createAsyncThunk('languages', async thunkAPI => {\n  try {\n    const res = await axios.get(`${API_URL}/languages`);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || 'Could not get throuph');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","API_URL","process","env","REACT_APP_API_URL","getAllLanguages","thunkAPI","res","get","data","err","rejectWithValue","response","message"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/services/languageControlService.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const getAllLanguages = createAsyncThunk(\n    'languages',\n    async (thunkAPI) => {\n        try {\n            const res = await axios.get(`${API_URL}/languages`);\n\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(\n                err.response.data.message || 'Could not get throuph'\n            );\n        }\n    }\n);"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAC3C,WAAW,EACX,MAAOO,QAAQ,IAAK;EAChB,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,YAAY,CAAC;IAEnD,OAAOM,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOJ,QAAQ,CAACK,eAAe,CAC3BD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO,IAAI,uBACjC,CAAC;EACL;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}