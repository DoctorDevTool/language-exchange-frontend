{"ast":null,"code":"var _jsxFileName = \"/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, Typography, Card, CardContent, Chip, Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  var _user$targetLanguages;\n  const user = useSelector(state => state.auth.user);\n  const navigate = useNavigate();\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"You are not logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => navigate('/login'),\n        sx: {\n          mt: 2\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Native Languages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), user.languages.map(lang => /*#__PURE__*/_jsxDEV(Chip, {\n            label: lang,\n            sx: {\n              mr: 1,\n              mt: 1\n            }\n          }, lang, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Target Languages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), (_user$targetLanguages = user.targetLanguages) === null || _user$targetLanguages === void 0 ? void 0 : _user$targetLanguages.map(lang => /*#__PURE__*/_jsxDEV(Chip, {\n            label: lang,\n            color: \"primary\",\n            sx: {\n              mr: 1,\n              mt: 1\n            }\n          }, lang, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"U3or3JYmMmOP/2q9RbAKCTmxCGI=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useSelector","Box","Typography","Card","CardContent","Chip","Button","useNavigate","jsxDEV","_jsxDEV","ProfilePage","_s","_user$targetLanguages","user","state","auth","navigate","sx","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mt","gutterBottom","username","email","languages","map","lang","label","mr","targetLanguages","color","_c","$RefreshReg$"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/pages/ProfilePage.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    Box,\n    Typography,\n    Card,\n    CardContent,\n    Chip,\n    Button,\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nconst ProfilePage = () => {\n    const user = useSelector((state) => state.auth.user);\n    const navigate = useNavigate();\n\n    if (!user) {\n        return (\n            <Box sx={{ p: 3 }}>\n                <Typography variant='h6'>You are not logged in.</Typography>\n                <Button\n                    variant='contained'\n                    onClick={() => navigate('/login')}\n                    sx={{ mt: 2 }}>\n                    Login\n                </Button>\n            </Box>\n        );\n    }\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Typography variant='h5' gutterBottom>\n                My Profile\n            </Typography>\n\n            <Card>\n                <CardContent>\n                    <Typography variant='h6'>{user.username}</Typography>\n                    <Typography>Email: {user.email}</Typography>\n\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant='subtitle1'>\n                            Native Languages:\n                        </Typography>\n                        {user.languages.map((lang) => (\n                            <Chip\n                                key={lang}\n                                label={lang}\n                                sx={{ mr: 1, mt: 1 }}\n                            />\n                        ))}\n                    </Box>\n\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant='subtitle1'>\n                            Target Languages:\n                        </Typography>\n                        {user.targetLanguages?.map((lang) => (\n                            <Chip\n                                key={lang}\n                                label={lang}\n                                color='primary'\n                                sx={{ mr: 1, mt: 1 }}\n                            />\n                        ))}\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    );\n};\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}