{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createReq, deleteReq } from '../services/requestService';\nconst requestsSlice = createSlice({\n  name: 'requests',\n  initialState: {\n    pending: [],\n    accepted: [],\n    declined: [],\n    status: '',\n    error: null\n  },\n  reducers: {\n    clearReqs: state => {\n      state.pending = [];\n      state.accepted = [];\n      state.declined = [];\n      state.status = ' ';\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(createReq.pending, state => {\n      state.status = 'pending';\n      state.error = null;\n    }).addCase(createReq.fulfilled, (state, action) => {\n      state.pending.push(action.payload);\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(deleteReq.fulfilled, (state, action) => {\n      state.pending.map(req);\n      state.status = 'succeeded';\n      state.error = null;\n    });\n  }\n});\nexport const {\n  clearReqs\n} = requestsSlice.actions;\nexport default requestsSlice.reducer;","map":{"version":3,"names":["createSlice","createReq","deleteReq","requestsSlice","name","initialState","pending","accepted","declined","status","error","reducers","clearReqs","state","extraReducers","builder","addCase","fulfilled","action","push","payload","map","req","actions","reducer"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/features/requestsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { createReq, deleteReq } from '../services/requestService';\n\nconst requestsSlice = createSlice({\n    name: 'requests',\n    initialState: {\n        pending: [],\n        accepted: [],\n        declined: [],\n        status: '',\n        error: null,\n    },\n    reducers: {\n        clearReqs: (state) => {\n            state.pending = [];\n            state.accepted = [];\n            state.declined = [];\n            state.status = ' ';\n            state.error = null;\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(createReq.pending, (state) => {\n                state.status = 'pending';\n                state.error = null;\n            })\n            .addCase(createReq.fulfilled, (state, action) => {\n                state.pending.push(action.payload);\n                state.status = 'succeeded';\n                state.error = null;\n            })\n            .addCase(deleteReq.fulfilled, (state, action) => {\n                state.pending.map((req))\n                state.status = 'succeeded';\n                state.error = null;\n            });\n    },\n});\n\nexport const { clearReqs } = requestsSlice.actions;\nexport default requestsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,SAAS,QAAQ,4BAA4B;AAEjE,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAC9BI,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACP,OAAO,GAAG,EAAE;MAClBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACL,QAAQ,GAAG,EAAE;MACnBK,KAAK,CAACJ,MAAM,GAAG,GAAG;MAClBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB;EACJ,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACf,SAAS,CAACK,OAAO,EAAGO,KAAK,IAAK;MACnCA,KAAK,CAACJ,MAAM,GAAG,SAAS;MACxBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACf,SAAS,CAACgB,SAAS,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MAC7CL,KAAK,CAACP,OAAO,CAACa,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAClCP,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACd,SAAS,CAACe,SAAS,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MAC7CL,KAAK,CAACP,OAAO,CAACe,GAAG,CAAEC,GAAI,CAAC;MACxBT,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAU,CAAC,GAAGT,aAAa,CAACoB,OAAO;AAClD,eAAepB,aAAa,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}