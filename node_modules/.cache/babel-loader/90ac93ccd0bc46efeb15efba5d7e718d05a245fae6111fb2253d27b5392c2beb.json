{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async ({\n  toSendNative,\n  toSendTarget\n}, thunkAPI) => {\n  console.log(toSendNative, toSendTarget);\n  try {\n    const res = await axios.get(`${API_URL}/users`, {\n      params: {\n        native,\n        target\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || err.message);\n  }\n});\nexport const getMe = createAsyncThunk('users/me', async (token, thunkAPI) => {\n  try {\n    const res = await axios.get(`${API_URL}/users/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || 'Login failed');\n  }\n});\nexport const getAllLanguages = createAsyncThunk('languages', async thunkAPI => {\n  try {\n    const res = await axios.get(`${API_URL}/languages`);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || 'Could not get throuph');\n  }\n});\nexport const langUpdate = createAsyncThunk('languages/update', async (data, thunkAPI) => {\n  try {\n    const res = await axios.put(`${API_URL}/users/me/languages`, data, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data.message || 'Update failed!');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","API_URL","process","env","REACT_APP_API_URL","fetchUsers","toSendNative","toSendTarget","thunkAPI","console","log","res","get","params","native","target","headers","Authorization","localStorage","getItem","data","err","rejectWithValue","response","message","getMe","token","getAllLanguages","langUpdate","put"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/services/userService.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const fetchUsers = createAsyncThunk(\n    'users/fetchUsers',\n    async ({ toSendNative, toSendTarget }, thunkAPI) => {\n        console.log(toSendNative, toSendTarget )\n        try {\n            const res = await axios.get(`${API_URL}/users`, {\n                params: { native, target },\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n            });\n            console.log(res.data)\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(err.response.data.message || err.message);\n        }\n    }\n);\n\nexport const getMe = createAsyncThunk('users/me', async (token, thunkAPI) => {\n    try {\n        const res = await axios.get(`${API_URL}/users/me`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n\n        return res.data;\n    } catch (err) {\n        return thunkAPI.rejectWithValue(\n            err.response.data.message || 'Login failed'\n        );\n    }\n});\nexport const getAllLanguages = createAsyncThunk(\n    'languages',\n    async (thunkAPI) => {\n        try {\n            const res = await axios.get(`${API_URL}/languages`);\n\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(\n                err.response.data.message || 'Could not get throuph'\n            );\n        }\n    }\n);\n\nexport const langUpdate = createAsyncThunk(\n    'languages/update',\n    async (data, thunkAPI) => {\n        try {\n            const res = await axios.put(`${API_URL}/users/me/languages`, data, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n            });\n            return res.data;\n        } catch (err) {\n            return thunkAPI.rejectWithValue(\n                err.response.data.message || 'Update failed!'\n            );\n        }\n    }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACtC,kBAAkB,EAClB,OAAO;EAAEO,YAAY;EAAEC;AAAa,CAAC,EAAEC,QAAQ,KAAK;EAChDC,OAAO,CAACC,GAAG,CAACJ,YAAY,EAAEC,YAAa,CAAC;EACxC,IAAI;IACA,MAAMI,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,QAAQ,EAAE;MAC5CY,MAAM,EAAE;QAAEC,MAAM;QAAEC;MAAO,CAAC;MAC1BC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1D;IACJ,CAAC,CAAC;IACFV,OAAO,CAACC,GAAG,CAACC,GAAG,CAACS,IAAI,CAAC;IACrB,OAAOT,GAAG,CAACS,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOb,QAAQ,CAACc,eAAe,CAACD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO,IAAIH,GAAG,CAACG,OAAO,CAAC;EAC7E;AACJ,CACJ,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG1B,gBAAgB,CAAC,UAAU,EAAE,OAAO2B,KAAK,EAAElB,QAAQ,KAAK;EACzE,IAAI;IACA,MAAMG,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,WAAW,EAAE;MAC/Ce,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUS,KAAK;MAAG;IAChD,CAAC,CAAC;IAEF,OAAOf,GAAG,CAACS,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOb,QAAQ,CAACc,eAAe,CAC3BD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO,IAAI,cACjC,CAAC;EACL;AACJ,CAAC,CAAC;AACF,OAAO,MAAMG,eAAe,GAAG5B,gBAAgB,CAC3C,WAAW,EACX,MAAOS,QAAQ,IAAK;EAChB,IAAI;IACA,MAAMG,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,YAAY,CAAC;IAEnD,OAAOU,GAAG,CAACS,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOb,QAAQ,CAACc,eAAe,CAC3BD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO,IAAI,uBACjC,CAAC;EACL;AACJ,CACJ,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG7B,gBAAgB,CACtC,kBAAkB,EAClB,OAAOqB,IAAI,EAAEZ,QAAQ,KAAK;EACtB,IAAI;IACA,MAAMG,GAAG,GAAG,MAAMX,KAAK,CAAC6B,GAAG,CAAC,GAAG5B,OAAO,qBAAqB,EAAEmB,IAAI,EAAE;MAC/DJ,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1D;IACJ,CAAC,CAAC;IACF,OAAOR,GAAG,CAACS,IAAI;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,OAAOb,QAAQ,CAACc,eAAe,CAC3BD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACI,OAAO,IAAI,gBACjC,CAAC;EACL;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}