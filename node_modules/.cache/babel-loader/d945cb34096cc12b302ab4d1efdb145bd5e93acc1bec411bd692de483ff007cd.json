{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from 'axios';\n\n// const API_URL = process.env.REACT_APP_API_URL;\n\n// export const login = createAsyncThunk(\n//     'auth/login',\n//     async (credentials, thunkAPI) => {\n//         try {\n//             const res = await axios.post(`${API_URL}/auth/login`, credentials);\n//             localStorage.setItem('token', res.data.token);\n\n//             return res.data;\n//         } catch (err) {\n//             return thunkAPI.rejectWithValue(\n//                 err.response.data.message || 'Login failed'\n//             );\n//         }\n//     }\n// );\n\n// export const register = createAsyncThunk(\n//     'auth/register',\n//     async (userData, thunkAPI) => {\n//         try {\n//             const res = await axios.post(`${API_URL}/auth/register`, userData);\n\n//             return res.data;\n//         } catch (err) {\n//             return thunkAPI.rejectWithValue(\n//                 err.response.data.message || 'Registration failed'\n//             );\n//         }\n//     }\n// );\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: localStorage.getItem('token') || null,\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    logout(state) {\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(login.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.error = null;\n    }).addCase(register.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authSlice","name","initialState","user","token","localStorage","getItem","status","error","reducers","logout","state","removeItem","extraReducers","builder","addCase","login","fulfilled","action","payload","rejected","register","actions","reducer"],"sources":["/Users/ivanishchenko/Desktop/PROGRAMING/language-exchange-frontend/src/features/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from 'axios';\n\n// const API_URL = process.env.REACT_APP_API_URL;\n\n// export const login = createAsyncThunk(\n//     'auth/login',\n//     async (credentials, thunkAPI) => {\n//         try {\n//             const res = await axios.post(`${API_URL}/auth/login`, credentials);\n//             localStorage.setItem('token', res.data.token);\n\n//             return res.data;\n//         } catch (err) {\n//             return thunkAPI.rejectWithValue(\n//                 err.response.data.message || 'Login failed'\n//             );\n//         }\n//     }\n// );\n\n// export const register = createAsyncThunk(\n//     'auth/register',\n//     async (userData, thunkAPI) => {\n//         try {\n//             const res = await axios.post(`${API_URL}/auth/register`, userData);\n\n//             return res.data;\n//         } catch (err) {\n//             return thunkAPI.rejectWithValue(\n//                 err.response.data.message || 'Registration failed'\n//             );\n//         }\n//     }\n// );\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        user: null,\n        token: localStorage.getItem('token') || null,\n        status: 'idle',\n        error: null,\n    },\n\n    reducers: {\n        logout(state) {\n            state.user = null;\n            state.token = null;\n            localStorage.removeItem('token');\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(login.fulfilled, (state, action) => {\n                state.user = action.payload.user;\n                state.token = action.payload.token;\n                state.status = 'succeeded';\n                state.error = null;\n            })\n            .addCase(login.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.payload;\n            })\n            .addCase(register.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                state.error = null;\n            })\n            .addCase(register.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.payload;\n            });\n    },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;IAC5CC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EAEDC,QAAQ,EAAE;IACNC,MAAMA,CAACC,KAAK,EAAE;MACVA,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACP,KAAK,GAAG,IAAI;MAClBC,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IACpC;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACC,KAAK,CAACC,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MACzCP,KAAK,CAACR,IAAI,GAAGe,MAAM,CAACC,OAAO,CAAChB,IAAI;MAChCQ,KAAK,CAACP,KAAK,GAAGc,MAAM,CAACC,OAAO,CAACf,KAAK;MAClCO,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDO,OAAO,CAACC,KAAK,CAACI,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MACxCP,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGU,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDJ,OAAO,CAACM,QAAQ,CAACJ,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC5CP,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDO,OAAO,CAACM,QAAQ,CAACD,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MAC3CP,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGU,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAO,CAAC,GAAGV,SAAS,CAACsB,OAAO;AAC3C,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}